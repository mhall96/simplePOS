{"version":3,"sources":["App.js","Home.js","history.js","Routes.js","auth.js","LoginPage.js","serviceWorker.js","index.js"],"names":["App","res","image","title","name","rating","desc","brand","url","app","credentials","className","componentId","dataField","categoryField","placeholder","data","start","end","label","defaultSelected","from","size","onData","this","sortOptions","sortBy","react","and","Component","createHistory","basename","auth0","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","login","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","history","replace","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","logout","removeItem","isAuthenticated","parse","getItem","LoginPage","state","username","password","error","handlePassChange","bind","handleUserChange","handleSubmit","dismissError","setState","evt","preventDefault","target","value","onSubmit","data-test","onClick","type","onChange","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9357d04e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  ReactiveBase,\r\n  CategorySearch,\r\n  RatingsFilter,\r\n  ResultCard\r\n} from '@appbaseio/reactivesearch';\r\n\r\nclass App extends Component {\r\n  onData(res) {\r\n    const result = {\r\n      image: \"https://www.enterprise.com/content/dam/global-vehicle-images/cars/FORD_FOCU_2012-1.png\",\r\n      title: res.name,\r\n      rating: res.rating,\r\n      desc: res.brand,\r\n      url: \"#\"\r\n    };\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ReactiveBase\r\n        app=\"car-store\"\r\n        credentials=\"cf7QByt5e:d2d60548-82a9-43cc-8b40-93cbbe75c34c\"\r\n      >\r\n        <div className=\"row reverse-labels\">\r\n          <div className=\"col s6 col-xs-6\">\r\n            <div className=\"row\">\r\n              <div className=\"col s12 col-xs-12\">\r\n                <CategorySearch\r\n                  componentId=\"SearchSensor\"\r\n                  dataField=\"name\"\r\n                  categoryField=\"brand.raw\"\r\n                  placeholder=\"Search Cars\"\r\n                />\r\n              </div>\r\n              <div className=\"col s12 col-xs-12\">\r\n                <RatingsFilter\r\n                  componentId=\"RatingsSensor\"\r\n                  dataField=\"rating\"\r\n                  title=\"RatingsFilter\"\r\n                  data={\r\n                    [{ start: 4, end: 5, label: \"4 stars and up\" },\r\n                    { start: 3, end: 5, label: \"3 stars and up\" },\r\n                    { start: 2, end: 5, label: \"2 stars and up\" },\r\n                    { start: 1, end: 5, label: \"> 1 stars\" }]\r\n                  }\r\n                  defaultSelected={{\r\n                    \"start\": 3,\r\n                    \"end\": 5\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col s6 col-xs-6\">\r\n            <ResultCard\r\n              componentId=\"SearchResult\"\r\n              dataField=\"name\"\r\n              title=\"Results\"\r\n              from={0}\r\n              size={20}\r\n              onData={this.onData}\r\n              sortOptions={[\r\n                {\r\n                  label: \"Lowest Price First\",\r\n                  dataField: \"price\",\r\n                  sortBy: \"asc\"\r\n                },\r\n                {\r\n                  label: \"Highest Price First\",\r\n                  dataField: \"price\",\r\n                  sortBy: \"desc\"\r\n                },\r\n                {\r\n                  label: \"Most rated\",\r\n                  dataField: \"rating\",\r\n                  sortBy: \"desc\"\r\n                }\r\n              ]}\r\n              react={{\r\n                and: [\"SearchSensor\", \"RatingsSensor\"]\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </ReactiveBase>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport App from './App';\r\n\r\nclass Home extends Component {\r\n\t// calls the login method in authentication service\r\n\tlogin = () => {\r\n\t\tthis.props.auth.login();\r\n\t}\r\n\t// calls the logout method in authentication service\r\n\tlogout = () => {\r\n\t\tthis.props.auth.logout();\r\n\t}\r\n\trender() {\r\n\t\t// calls the isAuthenticated method in authentication service\r\n\t\tconst { isAuthenticated } = this.props.auth;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tisAuthenticated() &&\r\n\t\t\t\t\t<div className=\"container column\">\r\n\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\tYou are logged in!{' '}\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\tonClick={this.logout}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLog Out\r\n              </a>.\r\n            </h5>\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t!isAuthenticated() && (\r\n\t\t\t\t\t\t<div className=\"container column\">\r\n\t\t\t\t\t\t\t<h5>\r\n\t\t\t\t\t\t\t\tYou are not logged in! Please{' '}\r\n\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\tonClick={this.login}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tLog In\r\n                </a>\r\n\t\t\t\t\t\t\t\t{' '}to continue.\r\n              </h5>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory({\r\n\tbasename: process.env.NODE_ENV === 'development' ? '' : '/reactivesearch-auth0-example'\r\n});","import React from 'react';\r\nimport { Route, Router } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Callback from './Callback';\r\nimport Auth from './auth';\r\nimport history from './history';\r\n\r\nconst auth = new Auth();\r\n\r\nconst handleAuthentication = (nextState, replace) => {\r\n\tif (/access_token|id_token|error/.test(nextState.location.hash)) {\r\n\t\tauth.handleAuthentication();\r\n\t}\r\n}\r\n\r\nconst Routes = () => (\r\n\t<Router history={history} component={Home}>\r\n\t\t<div>\r\n\t\t\t<Route exact path=\"/\" render={(props) => <Home auth={auth} {...props} />} />\r\n\t\t\t<Route path=\"/home\" render={(props) => <Home auth={auth} {...props} />} />\r\n\t\t\t<Route path=\"/callback\" render={(props) => {\r\n\t\t\t\thandleAuthentication(props);\r\n\t\t\t\treturn <Callback {...props} />\r\n\t\t\t}} />\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nexport default Routes;","import auth0 from 'auth0-js';\r\n\r\nimport history from './history';\r\n\r\nexport default class Auth {\r\n\t// Please use your own credentials here\r\n\tauth0 = new auth0.WebAuth({\r\n\t\tdomain: 'divyanshu.auth0.com',\r\n\t\tclientID: 'TJyKPI6aRiRwgr6SxlT7ExW10NEHW4Vy',\r\n\t\tredirectUri: process.env.NODE_ENV === 'development' ? 'http://localhost:3000/callback' : 'https://appbaseio-apps.github.io/reactivesearch-auth0-example/callback',\r\n\t\taudience: 'https://divyanshu.auth0.com/userinfo',\r\n\t\tresponseType: 'token id_token',\r\n\t\tscope: 'openid'\r\n\t});\r\n\r\n\tlogin = () => {\r\n\t\tthis.auth0.authorize();\r\n\t}\r\n\r\n\t// parses the result after authentication from URL hash\r\n\thandleAuthentication = () => {\r\n\t\tthis.auth0.parseHash((err, authResult) => {\r\n\t\t\tif (authResult && authResult.accessToken && authResult.idToken) {\r\n\t\t\t\tthis.setSession(authResult);\r\n\t\t\t\thistory.replace('/home');\r\n\t\t\t} else if (err) {\r\n\t\t\t\thistory.replace('/home');\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// Sets user details in localStorage\r\n\tsetSession = (authResult) => {\r\n\t\t// Set the time that the access token will expire at\r\n\t\tlet expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\r\n\t\tlocalStorage.setItem('access_token', authResult.accessToken);\r\n\t\tlocalStorage.setItem('id_token', authResult.idToken);\r\n\t\tlocalStorage.setItem('expires_at', expiresAt);\r\n\t\t// navigate to the home route\r\n\t\thistory.replace('/home');\r\n\t}\r\n\r\n\t// removes user details from localStorage\r\n\tlogout = () => {\r\n\t\t// Clear access token and ID token from local storage\r\n\t\tlocalStorage.removeItem('access_token');\r\n\t\tlocalStorage.removeItem('id_token');\r\n\t\tlocalStorage.removeItem('expires_at');\r\n\t\t// navigate to the home route\r\n\t\thistory.replace('/home');\r\n\t}\r\n\r\n\t// checks if the user is authenticated\r\n\tisAuthenticated = () => {\r\n\t\t// Check whether the current time is past the\r\n\t\t// access token's expiry time\r\n\t\tlet expiresAt = JSON.parse(localStorage.getItem('expires_at'));\r\n\t\treturn new Date().getTime() < expiresAt;\r\n\t}\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass LoginPage extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\terror: '',\r\n\t\t};\r\n\r\n\t\tthis.handlePassChange = this.handlePassChange.bind(this);\r\n\t\tthis.handleUserChange = this.handleUserChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.dismissError = this.dismissError.bind(this);\r\n\t}\r\n\r\n\tdismissError() {\r\n\t\tthis.setState({ error: '' });\r\n\t}\r\n\r\n\thandleSubmit(evt) {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tif (!this.state.username && !this.state.password) {\r\n\t\t\treturn this.setState({ error: 'Username and password are required' });\r\n\t\t}\r\n\r\n\t\tif (!this.state.username) {\r\n\t\t\treturn this.setState({ error: 'Username is required' });\r\n\t\t}\r\n\r\n\t\tif (!this.state.password) {\r\n\t\t\treturn this.setState({ error: 'Password is required' });\r\n\t\t}\r\n\r\n\t\treturn this.setState({ error: '' });\r\n\t}\r\n\r\n\thandleUserChange(evt) {\r\n\t\tthis.setState({\r\n\t\t\tusername: evt.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandlePassChange(evt) {\r\n\t\tthis.setState({\r\n\t\t\tpassword: evt.target.value,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.state.error &&\r\n\t\t\t\t\t\t<h3 data-test=\"error\" onClick={this.dismissError}>\r\n\t\t\t\t\t\t\t<button onClick={this.dismissError}>✖</button>\r\n\t\t\t\t\t\t\t{this.state.error}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<h1> Title </h1>\r\n\t\t\t\t\t<label> User Name </label>\r\n\t\t\t\t\t<input type=\"text\" data-test=\"username\" value={this.state.username} onChange={this.handleUserChange} />\r\n\t\t\t\t\t<h2></h2>\r\n\t\t\t\t\t<label> Password </label>\r\n\t\t\t\t\t<input type=\"text\" data-test=\"password\" value={this.state.password} onChange={this.handlePassChange} />\r\n\t\t\t\t\t<h2></h2>\r\n\t\t\t\t\t<input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default LoginPage;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import '@appbaseio/reactivesearch/dist/css/style.min.css';\r\n\r\nimport './index.css';\r\nimport Routes from './Routes';\r\nimport LoginPage from \"./LoginPage\";\r\n//import Home from \"./Home\";\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<LoginPage />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}