{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victoria\\\\Documents\\\\Project\\\\simplePOS\\\\frontend\\\\src\\\\GroupList.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\n\nclass GroupList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groups: [],\n      isLoading: true\n    };\n    this.remove = this.remove.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch('api/groups').then(response => response.json()).then(data => this.setState({\n      groups: data,\n      isLoading: false\n    }));\n  }\n\n  async remove(id) {\n    await fetch(`/api/group/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedGroups = [...this.state.groups].filter(i => i.id !== id);\n      this.setState({\n        groups: updatedGroups\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          groups = _this$state.groups,\n          isLoading = _this$state.isLoading;\n\n    if (isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    const groupList = groups.map(group => {\n      const address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\n      return React.createElement(\"tr\", {\n        key: group.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        style: {\n          whiteSpace: 'nowrap'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, group.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, address), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, group.events.map(event => {\n        return React.createElement(\"div\", {\n          key: event.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, new Intl.DateTimeFormat('en-US', {\n          year: 'numeric',\n          month: 'long',\n          day: '2-digit'\n        }).format(new Date(event.date)), \": \", event.title);\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        color: \"primary\",\n        tag: Link,\n        to: \"/groups/\" + group.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Button, {\n        size: \"sm\",\n        color: \"danger\",\n        onClick: () => this.remove(group.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Delete\"))));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      tag: Link,\n      to: \"/groups/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Add Group\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"My JUG Tour\"), React.createElement(Table, {\n      className: \"mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      width: \"20%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Events\"), React.createElement(\"th\", {\n      width: \"10%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, groupList))));\n  }\n\n}\n\nexport default GroupList;","map":{"version":3,"sources":["C:/Users/victoria/Documents/Project/simplePOS/frontend/src/GroupList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","AppNavbar","Link","GroupList","constructor","props","state","groups","isLoading","remove","bind","componentDidMount","setState","fetch","then","response","json","data","id","method","headers","updatedGroups","filter","i","render","groupList","map","group","address","city","stateOrProvince","whiteSpace","name","events","event","Intl","DateTimeFormat","year","month","day","format","Date","date","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass GroupList extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { groups: [], isLoading: true };\r\n\t\tthis.remove = this.remove.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ isLoading: true });\r\n\r\n\t\tfetch('api/groups')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => this.setState({ groups: data, isLoading: false }));\r\n\t}\r\n\r\n\tasync remove(id) {\r\n\t\tawait fetch(`/api/group/${id}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t}).then(() => {\r\n\t\t\tlet updatedGroups = [...this.state.groups].filter(i => i.id !== id);\r\n\t\t\tthis.setState({ groups: updatedGroups });\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { groups, isLoading } = this.state;\r\n\r\n\t\tif (isLoading) {\r\n\t\t\treturn <p>Loading...</p>;\r\n\t\t}\r\n\r\n\t\tconst groupList = groups.map(group => {\r\n\t\t\tconst address = `${group.address || ''} ${group.city || ''} ${group.stateOrProvince || ''}`;\r\n\t\t\treturn <tr key={group.id}>\r\n\t\t\t\t<td style={{ whiteSpace: 'nowrap' }}>{group.name}</td>\r\n\t\t\t\t<td>{address}</td>\r\n\t\t\t\t<td>{group.events.map(event => {\r\n\t\t\t\t\treturn <div key={event.id}>{new Intl.DateTimeFormat('en-US', {\r\n\t\t\t\t\t\tyear: 'numeric',\r\n\t\t\t\t\t\tmonth: 'long',\r\n\t\t\t\t\t\tday: '2-digit'\r\n\t\t\t\t\t}).format(new Date(event.date))}: {event.title}</div>\r\n\t\t\t\t})}</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t<Button size=\"sm\" color=\"primary\" tag={Link} to={\"/groups/\" + group.id}>Edit</Button>\r\n\t\t\t\t\t\t<Button size=\"sm\" color=\"danger\" onClick={() => this.remove(group.id)}>Delete</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppNavbar />\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<div className=\"float-right\">\r\n\t\t\t\t\t\t<Button color=\"success\" tag={Link} to=\"/groups/new\">Add Group</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h3>My JUG Tour</h3>\r\n\t\t\t\t\t<Table className=\"mt-4\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th width=\"20%\">Name</th>\r\n\t\t\t\t\t\t\t\t<th width=\"20%\">Location</th>\r\n\t\t\t\t\t\t\t\t<th>Events</th>\r\n\t\t\t\t\t\t\t\t<th width=\"10%\">Actions</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{groupList}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Container>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GroupList;"]},"metadata":{},"sourceType":"module"}